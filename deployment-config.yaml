apiVersion: apps/v1
kind: Deployment
metadata:
  name: mi-aplicacion
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mi-aplicacion
  template:
    metadata:
      labels:
        app: mi-aplicacion
    spec:
      automountServiceAccountToken: false
      containers:
      - name: mi-contenedor
        image: darkedson/test-repo
        env:
        - name: DATABASE_NAME
          valueFrom:
            secretKeyRef:
              name: mi-secret
              key: DATABASE_NAME
        - name: DATABASE_USER
          valueFrom:
            secretKeyRef:
              name: mi-secret
              key: DATABASE_USER
        - name: DATABASE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mi-secret
              key: DATABASE_PASSWORD
        ports:
        - containerPort: 8000
        resources:
          limits:
            memory: "512Mi"
            cpu: "0.5"
      volumes:
      - name: config-volume
        configMap:
          name: mi-configmap
---
apiVersion: v1
kind: Service
metadata:
  name: mi-aplicacion
spec:
  selector:
    app: mi-aplicacion
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: mi-aplicacion
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: mi-aplicacion
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 50
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mi-configmap
data:
  CONFIG_1: valor1
  CONFIG_2: valor2
---
apiVersion: v1
kind: Secret
metadata:
  name: mi-secret
type: Opaque
data:
  DATABASE_NAME: LC9kZXYuc3FsaXRl
  DATABASE_USER: dXNlcg==
  DATABASE_PASSWORD: cGFzc3dvcmQ=
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mi-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: "nginx" 
    nginx.ingress.kubernetes.io/enable-global-auth: "false"  
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"  
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
spec:
  rules:
  - host: mi-aplicacion.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mi-aplicacion
            port:
              number: 80